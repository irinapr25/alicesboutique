/* HEADER */
.header {
	position: fixed;
	width: 100%;
	left: 0;
	top: 0;
	z-index: 50;
	background-color: #fff;
	box-shadow: 0 0 rem(6) rgba(0, 0, 0, 0.2);

	// .header__container
	&__container {
		// @include adaptiveValue('min-height', 90, 60);
		@include adaptiveValue('min-height', 80, 50);
		padding-top: rem(5);
		padding-bottom: rem(5);
		display: flex;
		align-items: center;
		@media (min-width: em(768)) {
			column-gap: rem(30);
		}
		// Tablet - max-width: 767.98px
		@media (max-width: $tablet) {
			// column-gap: rem(16);
		}
	}

	// .header__logo
	&__logo {
		// menu и lang сдвигаем вправо
		margin-right: auto;
	}

	// .header__menu
	&__menu {
	}

	// .header__menu-lang
	&__lang {
		@media (max-width: $tablet) {
			&:not(:first-child) {
				@include adaptiveValue('margin-left', 20, 16, 768, 320, 1);
			}

			&:not(:last-child) {
				// margin-right: rem(16);
				@include adaptiveValue('margin-right', 20, 16, 768, 320, 1);
			}
		}
	}
}

/* LOGO */
.logo {
	position: relative;
	z-index: 5;
	@include adaptiveValue('padding-bottom', 62, 34.5);
	@include adaptiveValue('flex-basis', 287, 160);
	// flex: 0 1 percent(347, 1310);
	// padding-bottom: percent(76, 1310);
	flex-shrink: 0;

	// .logo img
	img {
		// forced-colors: active в style внутри logo.svg
	}
}

/* MENU */
.menu {
	// display: flex;
	// column-gap: 20px;
	// row-gap: 10px;
	// align-items: center;
	// justify-content: flex-end;
	// position: relative;
	// flex: 1 1 auto;

	// .menu__body
	&__body {
		@media (max-width: $tablet) {
			/* выпадающее меню на мобильных устройствах */
			position: fixed;
			// width: 70%;
			min-width: 70%;
			height: 100%;
			// background-color: $section-background-color;
			background-color: #fff;
			right: -100%;
			top: 0;
			// padding-top: rem(100);
			@include adaptiveValue('padding-top', 100, 80, 768, 320);
			padding-left: rem(20);
			padding-right: rem(20);
			padding-bottom: rem(30);
			overflow-y: auto;

			scrollbar-color: #fff $dark-background-color;
			// Изменение ширины полосы прокрутки можно использовать thin, auto или другие значения
			scrollbar-width: thin;
			// чтобы не прыгал контент, когда появляется полоса прокрутки
			scrollbar-gutter: stable;
			transition: right 0.4s linear 0s;

			// вверху есть class menu-open (у body)
			.menu-open & {
				right: 0;
			}

			// не работает
			// ::-webkit-scrollbar {
			// 	display: none;
			// }

			&::before {
				/* плашка, чтобы под нее уходили пункты menu */
				content: '';
				position: fixed;
				// перекрывает полосу прокрутки у выпадающего меню, если она есть
				width: 100%;
				// @include adaptiveValue('height', 98, 68);
				@include adaptiveValue('height', 88, 58);

				top: 0;
				left: -100%;
				background-color: #fff;
				// background-color: red;

				z-index: 2;
				transition-delay: 0.4s;

				// для body добавляем class .menu-open, когда menu открыто
				.menu-open & {
					left: 0;
					// left: rem(-12);
					transition-delay: 0s;
				}
			}
		}
		@media (max-width: $mobileL) {
			width: 100%;
		}
	}

	// .menu__list
	&__list {
		@media (min-width: em(768)) {
			@include adaptiveValue('column-gap', 30, 18, $containerWidth, 768, 1);
			display: flex;
			justify-content: center;
			align-items: center;
			flex-wrap: wrap;
			row-gap: rem(3);
		}
		// @media (max-width: $tablet) {
		// так не делать, если есть выпадающее меню или добавлять width: 100% для .menu__item
		// 	flex-direction: column;
		// 	align-items: start;
		// 	row-gap: rem(20);
		// }
	}

	// .menu__item
	&__item {
		position: relative;
		display: flex;
		align-items: center;
		column-gap: em(6, 18);
		// background-color: green;
		@include adaptiveValue('font-size', 18, 16, $containerWidth, 768, 1);
		flex-wrap: wrap; // для sub-menu в mobile
		// column-gap: 10px;
		@media (max-width: $tablet) {
			font-size: rem(24);
			&:not(:last-child) {
				margin-bottom: rem(20);
			}
		}

		.sub-menu {
			// .sub-menu__list
			&__list {
				display: grid;
				@media (min-width: em(768)) {
					padding: rem(10);
					background-color: #fff;
					border: rem(1) solid rgba($main-color, 0.2);
					border-radius: rem(5);
					// width: 200px;
					row-gap: rem(10);
				}
				@media (max-width: $tablet) {
					font-size: rem(20);
					padding: rem(15) rem(15) rem(8) rem(15);
					row-gap: rem(16);
				}
			}
			// .sub-menu__item
			&__item {
				&:not(:last-child) {
					// margin-bottom: rem(10);
				}
				@media (max-width: $tablet) {
					&:not(:last-child) {
						// margin-bottom: rem(16);
					}
				}
			}
		}

		// class _pc для устройств с наведением
		._pc & {
			// ._pc .menu__item:hover
			@media (min-width: em(768)) {
				@media (any-hover: hover) {
					// &:hover,
					// &:focus-within {
					&:hover {
						.sub-menu {
							opacity: 1;
							visibility: visible;
							pointer-events: all;
							transform: translate(0, 0);
						}
						.arrow {
							&::before {
								transform: translateX(-75%) rotate(-40deg);
							}
							&::after {
								transform: translateX(-5%) rotate(40deg);
							}
						}
						.menu__link span {
							&::after {
								width: 100%;
								left: 0;
							}
						}
					}
				}
			}
			@media (forced-colors: active) {
				.menu__link span {
					&::after {
						background-color: LinkText;
					}
				}
			}
		}
		// &:focus-within {
		// 	.sub-menu {
		// 		opacity: 1;
		// 		visibility: visible;
		// 		pointer-events: all;
		// 		transform: translate(0, 0);
		// 	}
		// 	.arrow {
		// 		&::before {
		// 			transform: translateX(-75%) rotate(-40deg);
		// 		}
		// 		&::after {
		// 			transform: translateX(-5%) rotate(40deg);
		// 		}
		// 	}
		// 	.menu__link span {
		// 		&::after {
		// 			width: 100%;
		// 			left: 0;
		// 		}
		// 	}
		// }

		// .menu__item._active
		&._active {
			.menu__link span {
				&::after {
					width: 100%;
					left: 0;
				}
			}
			.sub-menu {
				@media (min-width: em(768)) {
					// transform: translate(0, 0);
				}

				// transition: opacity 5, max-height 6s;
				// top: 15px;
				// opacity: 1;
				// visibility: visible;
				// pointer-events: all;
				// transform: translate(0, 0);
				// @media (max-width: $tablet) {
				// 	display: block;
				// 	opacity: 1;
				// 	visibility: visible;
				// }
			}
			.arrow {
				&::before {
					// transform: translateX(-75%) rotate(-40deg);
				}
				&::after {
					// transform: translateX(-5%) rotate(40deg);
				}
			}
		}
	}

	// .menu__link
	&__link {
		@media (max-width: $tablet) {
			// flex: 1 1 auto; // для sub-menu - вариант плохой, т.к. Cl на пустое пространство от текста до стрелки срабатывает
			margin-right: auto; // чтобы стрелка ушла вправо и Cl был только на текст
		}
		// font-size: rem(18);
		// @include adaptiveValue('font-size', 18, 16, $containerWidth, 768, 1);
		line-height: 1.5;
		color: $main-color;

		// @media (max-width: $tablet) {
		// 	font-size: rem(24);
		// }

		// .menu__link span
		span {
			position: relative;

			// .menu__link span::after
			&::after {
				/* эффект плавного подчеркивания слева на право */
				content: '';
				position: absolute;
				// left: 50%; // для подчеркивания из центра
				right: 0;
				bottom: em(-1.5, 18);
				width: 0;
				height: em(1.3, 18);
				background-color: $main-color;
				border-radius: em(1, 18);
				transition: all 0.3s ease 0s;
			}
		}

		// .menu__link._active span::after
		&._active {
			span {
				&::after {
					width: 100%;
					left: 0;
				}
			}
		}

		@media (any-hover: hover) {
			// .menu__link:hover span::after
			&:hover {
				span {
					&::after {
						width: 100%;
						left: 0;
					}
				}
			}
		}
		@media (hover: none) {
			// .menu__link:active span::after
			&:active {
				span {
					&::after {
						width: 100%;
						left: 0;
					}
				}
			}
		}
		// .menu__link._active
		// для контрастных тем (::after для span не отображается)
		@media (forced-colors: active) {
			&._active {
				span {
					// text-decoration: underline;
					// border-bottom: rem(1.5) solid LinkText;
					&::after {
						background-color: LinkText;
					}
				}
			}
		}
	}

	// .menu__sub-menu
	&__sub-menu {
	}
}

/* BURGER icon */
.icon-menu {
	display: none;
	@media (max-width: $tablet) {
		display: inline-flex;
		position: relative;
		flex: 0 0 rem(26);
		// width: 30px;
		height: rem(16);
		cursor: pointer;
		z-index: 5;

		// .icon-menu span, .icon-menu::before, .icon-menu::after
		span,
		&::before,
		&::after {
			position: absolute;
			left: 0;
			width: 100%;
			height: rem(2.4);
			background-color: $main-color;
			border-radius: rem(2);
			border: rem(1) solid $main-color;
		}

		// .icon-menu span
		span {
			top: 50%;
			opacity: 1;
			// transition: background-color 0.3s linear, border 0.3s linear;
			transition: opacity 0.3s linear;
			transition-delay: 0.2s;
		}
		// .icon-menu::before, .icon-menu::after
		&::before,
		&::after {
			content: '';
			top: 0;
			transition: top 0.3s linear 0.3s, transform 0.3s linear 0s;
			// transition-property: top, transform;
			// transition-timing-function: linear;
			// transition-duration: 0.3s, 0.3s;
			// transition-delay: 0.3s, 0s;
		}
		// .icon-menu::after
		&::after {
			top: 100%;
		}

		// .menu-open .icon-menu span
		.menu-open & {
			span {
				transition-delay: 0.1s;
				// background-color: transparent;
				// border: none;
				opacity: 0;
			}
			// .menu-open .icon-menu::before, .icon-menu::after
			&::before,
			&::after {
				top: 50%;
				transition: top 0.3s linear 0s, transform 0.3s linear 0.3s;
				// transition-delay: 0s, 0.3s;
			}
			&::before {
				transform: rotate(45deg);
			}
			&::after {
				transform: rotate(-45deg);
			}
		}

		@media (forced-colors: active) {
			& span,
			&::before,
			&::after {
				background-color: LinkText;
				border: rem(1) solid LinkText;
			}
		}
	}
}

/* LANGUAGE */
.lang {
	position: relative;
	z-index: 2;
	// padding: rem(5);
	@media (any-hover: hover) {
		// &:hover &__list,
		// &:focus-within &__list {

		// .lang:hover .lang__list
		&:hover &__list {
			opacity: 1;
			visibility: visible;
			pointer-events: all;
			top: 100%;
		}
	}
	// при переходе Tab меню выпадает, но Esc не работает
	// &:focus-within &__list {
	// 	opacity: 1;
	// 	visibility: visible;
	// 	pointer-events: all;
	// 	top: 100%;
	// }

	// .lang__button
	&__button {
		// padding: 0;
		// padding: rem(10);
		// width: rem(40);
		// height: rem(40);
		display: flex;
		align-items: center;
		justify-content: center;
		width: rem(22);
		height: rem(22);
		// & img {
		// 	max-width: rem(22);
		// }

		// .lang__button svg
		svg {
			// width: rem(22);
			// height: rem(22);
			width: 100%;
			height: 100%;
			fill: #000;
		}
		@media (forced-colors: active) {
			svg {
				fill: LinkText;
			}
		}
	}

	// .lang__list
	&__list {
		position: absolute;
		font-size: rem(18);
		// display: flex;
		// flex-direction: column;
		// align-items: center;
		display: grid;
		row-gap: rem(15);
		justify-items: center;
		top: 100%;
		// right: 0;
		left: 50%;
		transform: translateX(-50%);
		background: #fff;
		padding: rem(10);
		// transform: translate(0px, 10%);
		opacity: 0;
		visibility: hidden;
		pointer-events: none;
		transition: all 0.5s ease 0s;

		// .lang._active .lang__list
		._active & {
			opacity: 1;
			visibility: visible;
			pointer-events: all;
			// top: 100%;
		}
	}

	// .lang__item
	&__item {
	}

	// .lang__link
	&__link {
		// .lang__link._active
		&._active {
			// text-decoration: underline;
			font-weight: 500;
		}
		@media (any-hover: hover) {
			&:hover {
				// text-decoration: underline;
			}
		}
		@media (hover: none) {
			&:active {
				// text-decoration: underline;
			}
		}
	}
	// a.lang__link именно так, т.к. в null-style a-text-decoration: none;
	a {
		&.lang__link {
			// плавное подчеркивание
			text-decoration: underline solid transparent;
			text-decoration-thickness: em(1, 16);
			text-underline-offset: em(2, 16);
			transition: text-decoration-color 0.3s ease 0s;
			&._active {
				text-decoration-color: $text-color;
			}
			@media (any-hover: hover) {
				&:hover {
					text-decoration-color: $text-color;
				}
			}
			@media (hover: none) {
				&:active {
					text-decoration-color: $text-color;
				}
			}
			@media (forced-colors: active) {
				text-decoration: none;
				text-underline-offset: em(2, 16);
				text-decoration-thickness: em(1, 16);
				&._active {
					text-decoration: underline;
				}
				@media (any-hover: hover) {
					&:hover {
						text-decoration: underline;
					}
				}
			}
		}
	}
}
